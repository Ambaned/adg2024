---
title: "Algorytmy danych geoprzestrzennych"
subtitle: "Obliczenia geodezyjne"
author: "Krzysztof Dyba"
format: 
  revealjs:
    slide-number: c/t
    incremental: true
    embed-resources: true
css: _style.css
---

```{r}
#| message: false
library("sf")

url = "https://naciscdn.org/naturalearth/110m/cultural/ne_110m_admin_0_countries.zip"
f = paste0("/vsizip/", "/vsicurl/", url)
world = read_sf(f)
```

## Jaki kształt ma Ziemia? {style="text-align: center;"}

![](https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/North_America_from_low_orbiting_satellite_Suomi_NPP.jpg/768px-North_America_from_low_orbiting_satellite_Suomi_NPP.jpg)

::: {style="font-size: 60%;"}
Blue Marble 2012, Suomi NPP
:::

## Geoida

![](https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Geoid_undulation_to_scale.jpg/720px-Geoid_undulation_to_scale.jpg){fig-align="center"}

::: {style="text-align: center;"}
::: {style="font-size: 60%;"}
[International Centre for Global Earth Models](https://icgem.gfz-potsdam.de)

<https://essd.copernicus.org/articles/11/647/2019/>
:::
:::

## Geoida

**Geoida** to model kształtu Ziemi, który przedstawia złożoną, nieregularną
powierzchnię, na którą siła grawitacji działa wszędzie prostopadle do
powierzchni.

Geoida nie ma matematycznie zdefiniowanego kształtu. Jej kształt wynika z
różnic w ziemskim polu grawitacyjnym spowodowanymi zmianami w gęstości i
rozkładzie masy Ziemi (np. występowanie gór i dolin). 

Źródłem danych zazwyczaj są satelitarne pomiary grawitacyjne (np. misja GRACE).

## Matematyczne reprezentacje

::::: columns
::: {.column width="60%"}
![](https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Ellipsoide.svg/628px-Ellipsoide.svg.png)
:::

::: {.column width="40%"}
**Sfera** (góra)

**Elipsoida obrotowa** (lewo dół)

**Elipsoida** (prawo dół)
:::
:::::

::: {style="font-size: 50%;"}
[Wikipedia](https://en.wikipedia.org/wiki/Ellipsoid)
::: 

## Elipsoida

**Elipsoida** to obiekt geometryczny, w którym wszystkie płaskie przekroje są
elipsami lub okręgami. Wszystkie trzy osie mogą mieć różne długości.

$$
\frac{x^2}{a^2} + \frac{y^2}{a^2} + \frac{z^2}{b^2} = 1
$$

## Elipsoida obrotowa (sferoida)

**Elipsoida obrotowa** to obiekt geometryczny utworzony przez obrót elipsy
wokół jednej z jej osi. Jeśli elipsa zostanie obrócona wokół mniejszej osi,
to w rezultacie powstanie elipsoida spłaszczona, która przypomina kształtem
Ziemię.

Jest to szczególny przypadek elipsoidy, w której dwie z trzech osi są równe.

$$
\frac{x^2 + y^2}{a^2} + \frac{z^2}{c^2} = 1
$$

::: {style="font-size: 75%;"}
Jeśli:

$c < a$ -- elipsoida spłaszczona

$c > a$ -- elipsoida wydłużona
:::

## Sfera

**Sfera** to idealnie okrągły obiekt geometryczny, w którym każdy punkt na
powierzchni jest w równej odległości od środka. Jest to podstawowe i ogólne
przybliżenie kształtu Ziemi, ponieważ nie uwzględnia spłaszczenia na biegunach.

Jest to szczególny przypadek elipsoidy, w której wszystkie trzy osie mają równą
długość.

$$
x^2 + y^2 + z^2 = r^2
$$

## Obrazowanie Ziemi na mapie

**Podstawowy problem**

Przedstawienie Ziemi na mapie obejmuje rzutowanie trójwymiarowego kształtu
na dwuwymiarową powierzchnię. Ponieważ powierzchnia Ziemi jest zaokrąglona,
proces ten wprowadza zniekształcenia związane ze kształtem, powierzchnią,
odległością czy kierunkiem.

\
\

::: {.fragment}
::: {style="text-align: center;"}
**Jakie jest rozwiązanie?**
:::
:::

## Odwzorowanie kartograficzne

**Odwzorowanie kartograficzne** to matematyczna transformacja szerokości i
długości geograficznej z powierzchni sfery lub elipsoidy na płaszczyznę.

::: {.nonincremental}
**Podstawowe typy odwzorowań:**

- Walcowe -- Ziemia rzutowana jest na cylinder, który następnie jest rozwijany
tworząc płaską mapę.
- Stożkowe -- Ziemia rzutowana jest na stożek, który jest rozwijany.
- Azymutalne (płaszczyznowe) -- Ziemia rzutowana jest na płaską płaszczyznę,
wyśrodkowaną w określonym punkcie.
:::

## Przykład

```{r}
world_mollweide = st_transform(st_geometry(world), crs = "+proj=moll")
g = st_geometry(st_graticule(lat = c(-89.9, seq(-80, 80, 20), 89.9)))
g = st_transform(g, crs = "+proj=moll")
plot(g, col = "grey", main = "Odwzorowanie Mollweidego")
plot(world_mollweide, add = TRUE)
```

## Przykład

```{r}
crs_laea = "+proj=laea +x_0=0 +y_0=0 +lon_0=10 +lat_0=40"
world_laea = st_transform(st_geometry(world), crs = crs_laea)
g = st_geometry(st_graticule(lat = c(-89.9, seq(-80, 80, 30), 89.9)))
g = st_transform(g, crs = crs_laea)
plot(g, col = "grey", main = "Odwzorowanie azymutalne Lamberta")
plot(world_laea, add = TRUE)
```

## Elipsy Tissota

## Wnioski

- Przedstawianie Ziemi na mapie to skomplikowany proces wymagający kompromisów.
- Każde odwzorowanie ma swój własny zestaw zniekształceń.
- Różne cele wymagają odmiennych podejść.
- Odwzorowanie jest zawsze przybliżeniem.

## Obliczenia {.center style="text-align: center;"}

## Odległość

```{r}
pts = c(st_point(c(21, 52.2)), st_point(c(-74, 40.71)))
pts = st_sfc(pts, crs = "EPSG:4326")
pts = st_cast(pts, "POINT")
```

```{r}
line = st_sfc(st_linestring(st_coordinates(pts)), crs = "EPSG:4326")
great_circle = st_segmentize(line, dfMaxLength = 1000) # 1000 m
```

```{r}
pts_equidist = st_transform(pts, "+proj=aeqd")
# st_distance(pts_equidist) / 1000
# 8115,859 km
```

```{r}
plot(st_geometry(world), axes = TRUE)
plot(pts, pch = 20, add = TRUE)
plot(line, col = "red", lwd = 2, add = TRUE)
text("8116 km", x = -35, y = 35, col = "red")
plot(great_circle, col = "blue", lwd = 2, add = TRUE)
text("6855 km", x = -30, y = 70, col = "blue")
```

::: {style="font-size: 80%;"}
[Odległość euklidesowa]{style="color:red;"}: 8116 km \
(Odwzorowanie azymutalne równoodległościowe)

[Odległość sferyczna]{style="color:blue;"}: 6855 km
:::

## Odległość euklidesowa

**Odległość euklidesowa** to miara odległości w linii prostej między dwoma
punktami obliczana z następującego równania:

$$
d = \sqrt{(\Delta x)^2+(\Delta y)^2} = \sqrt{(x_2 - x_1)^2 + (y_2 - y_1)^2}
$$

Wynika ona bezpośrednio z twierdzenia Pitagorasa o trójkątach prostokątnych:

$$
a^2 + b^2 = c^2
$$

gdzie $a$ i $b$ to długość przyprostokątnych, a $c$ to długość
przeciwprostokątnej.

## Odległość euklidesowa

![](https://upload.wikimedia.org/wikipedia/commons/thumb/5/55/Euclidean_distance_2d.svg/640px-Euclidean_distance_2d.svg.png)

::: {style="text-align: center;"}
::: {style="font-size: 60%;"}
[Wikipedia](https://commons.wikimedia.org/wiki/File:Euclidean_distance_2d.svg)
:::
:::

## Odległość sferyczna

::::: columns
::: {.nonincremental}
::: {.column width="70%"}
**Odległość sferyczna** (ortodroma) to najkrótsza odległość między dwoma
punktami na powierzchni sfery. Istnieje kilka wzorów do jej obliczenia:

1. Sferyczne prawo cosinusów.
2. Długość cięciwy koła wielkiego.
3. Wzór haversine.
:::

::: {.column width="30%"}
![](https://upload.wikimedia.org/wikipedia/commons/thumb/c/c2/Ortodroma.svg/240px-Ortodroma.svg.png)

::: {style="text-align: center;"}
::: {style="font-size: 60%;"}
[Wikipedia](https://commons.wikimedia.org/wiki/File:Ortodroma.svg)
:::
:::

:::
:::
:::::

## Sferyczne prawo cosinusów

$$
\Delta\sigma = \arccos\left(\sin(\phi_1)\sin(\phi_2) + \cos(\phi_1)\cos(\phi_2)\cos(\lambda_2 - \lambda_1)\right)
$$

$$
d = r \times \Delta\sigma,
$$
gdzie:

$\Delta\sigma$ to kąt środkowy między punktami na sferze,

$r$ to średnia długość promienia Ziemi.

## Długość cięciwy

::: {style="font-size: 85%;"}

$$
\Delta{x} = \cos(\phi_2)\cos(\lambda_2) - \cos(\phi_1)\cos(\lambda_1)
$$

$$
\Delta{y} = \cos(\phi_2)\sin(\lambda_2) - \cos(\phi_1)\sin(\lambda_1)
$$

$$
\Delta{z} = \sin(\phi_2) - \sin(\phi_1)
$$

$$
\Delta\sigma_\text{c} = \sqrt{(\Delta{x})^2 + (\Delta{y})^2 + (\Delta{z})^2}
$$
$$
d = 2 r \arcsin \frac{\Delta\sigma_\text{c}}{2},
$$

gdzie:

$\Delta\sigma_\text{c}$ to długość cięciwy koła wielkiego.

:::

## Odległość elipsoidalna

**Odległość elipsoidalna** to najkrótsza odległość między dwoma punktami na
powierzchni elipsoidy. Jej obliczenie jest złożonym zadaniem i obejmuje
rozwiązanie zestawu równań nieliniowych.

Najczęściej stosowaną metodą jest opracowana przez polsko-amerykańskiego geodetę
Thaddeusa Vincenty'ego w 1975 r. Jednak, ograniczeniem mogą być problemy ze
zbieżnością w przeciwległych punktach.

W przypadku zastosowań wymagających najwyższej precyzji stosuje się algorytm
Karneya (2013 r.) uważany za najdokładniejszą metodę.

## Odległość powierzchniowa

::: {style="font-size: 85%;"}
**Odległość powierzchniowa** to rzeczywista odległość mierzona wzdłuż
powierzchni terenu, uwzględniająca zmiany wysokości i nierówności powierzchni.
Inaczej nazywana jest pomiarem 3D (topograficznym). Do wyliczenia niezbędny
jest numeryczny model terenu.
:::

```{r}
#| message: false
library("terra")
r = rast("../dane/DEM.tif") * 10
coords = matrix(c(386878, 360000, 386878, 640000), ncol = 2, byrow = TRUE)
line = vect(coords, type = "lines", crs = "EPSG:2180")
```

```{r}
plot(r, main = "Wysokość terenu [m n.p.m.]")
plot(line, lwd = 4, col = "red", add = TRUE)
```

## Odległość powierzchniowa

::: {.nonincremental}
1. Wyodrębnij wartości wysokości terenu wzdłuż linii.
2. Oblicz odległość w trzech wymiarach (X, Y, Z) między kolejnymi punktami.
:::

```r
points = extract(r, line, xy = TRUE)

total_length = 0
for (i in 2:nrow(points)) {
  p1 = c(points$X[i - 1], points$Y[i - 1], points$Z[i - 1])
  p2 = c(points$X[i], points$Y[i], points$Z[i])
  distance = sqrt(sum((p2 - p1)^2))
  total_length = total_length + distance
}

print(total_length)
```

## Odległość powierzchniowa

```{r}
# perim(line) / 1000 # w km
#> 280
```

```{r}
points = extract(r, line, ID = FALSE, xy = TRUE)

total_length = 0
for (i in 2:nrow(points)) {
  p1 = c(points$x[i - 1], points$y[i - 1], points$DEM[i - 1])
  p2 = c(points$x[i], points$y[i], points$DEM[i])
  distance = sqrt(sum((p2 - p1)^2))
  total_length = total_length + distance
}

# total_length / 1000
#> 282.9913
```

```{r}
# wygladzenie profilu terenu
elev = loess(points$DEM ~ seq_along(points$DEM), span = 0.1)
elev = elev$fitted

# odleglosc miedzy punktami
dist = perim(line) / length(elev) / 1000
dist = cumsum(rep(dist, length(elev)))
```

```{r}
plot(elev / 1000 ~ dist, type = "l", ylim = c(0, 2),
     xlab = "Odległość planarna [km]", ylab = "Wysokość [km n.p.m]")
```

**Odległość planarna:** 280 km

**Odległość powierzchniowa:** 283 km

## Powierzchnia

## Rzeczywista wielkość komórek

## Precyzja współrzędnych

::: {style="text-align: center;"}
![](https://imgs.xkcd.com/comics/coordinate_precision.png)

::: {style="font-size: 60%;"}
<https://xkcd.com/2170>
:::
:::
